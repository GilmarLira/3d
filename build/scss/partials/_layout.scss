
// Layout
// ///////////////////////////////////////////////////////////////

// * { @include outline(#ccc); }

// .cf:before, .cf:after { content: ''; display: table; }
// .cf:after { clear: both; }

$box-per-row: 4;
$box-side: 200px;
$box-color: rgba(0, 174, 230, .15);
$box-active: rgba(#ffa500, .6);
$box-hover: $box-active;
$box-active-hover: rgba(#ffcf00, 0.6);

$gutter: 2.5vh;

html { height: 100%; }

body {
  // background-color: #222;
  height: 100%;
  tap-highlight-color: transparent;
  transition: transform 1s ease-out;
  width: 100%;

}

.container {
  filter: saturate(2);
  height: 100%;
  perspective: 300px;
  position: relative;
  transform-style: preserve-3d;
  width: 100%;
}


.wall {
  // outline: 1px solid gray;
  pointer-events: none;
  position: absolute;
  transform-style: preserve-3d;
  z-index: 1;

  &.back {
    @include size(100%);
    transform: translateZ(calc(-50vw - #{ $gutter / 2 }));
  }

  &.top,
  &.bottom {
    height: 50vw;
    width: 100%;
  }

  &.top {
    top: -$gutter / 2;
    transform: rotateX(-90deg);
    transform-origin: 50% 0%;
  }

  &.bottom {
    bottom: -$gutter / 2;
    transform: rotateX(90deg);
    transform-origin: 50% 100%;
  }

  &.left,
  &.right {
    height: 100%;
    width: 50%;
  }

  &.left {
    left: -$gutter / 2;
    transform: rotateY(90deg);
    transform-origin: 0% 50%;
  }

  &.right {
    right: -$gutter / 2;
    transform: rotateY(-90deg);
    transform-origin: 100% 50%;
  }
}


.box {
  float: left;
  lost-waffle: 1 / $box-per-row $box-per-row $gutter;
  position: relative;
  transform-style: preserve-3d;
  transition: transform .5s ease-out, background-color 300ms ease-out;

  &:hover {
    &:not(.selected) { transform: translateZ(50px); }
    .side { background-color: $box-hover; }
  }

  &.selected {
    .top &,
    .bottom & { transform: translateZ(50vh); } // 30px is the default Lost grid gutter

    .left &,
    .right & { transform: translateZ(calc(50vw)); } // 30px is the default Lost grid gutter

    .back & { transform: translateZ(calc(50vw + #{ $gutter / 2 })); }
  }
}


.side {
  background-color: $box-color;
  pointer-events: all;
  position: absolute;
  transition: background-color 300ms ease-out;
  width: 100%;

  .selected & { background-color: $box-active; }
  .selected:hover & { background-color: $box-active-hover; }

  &.front,
  &.left,
  &.right {
    height: 100%;
  }

  &.top {
    height: $box-side;
    transform: rotateX(-90deg);
    transform-origin: 50% 0%;

    .back & { height: $box-side / 2; }
  }

  &.bottom {
    bottom: 0;
    height: $box-side;
    transform: rotateX(90deg);
    transform-origin: 50% 100%;

    .back & { height: $box-side / 2; }

  }

  &.left {
    transform: rotateY(90deg);
    transform-origin: 0% 50%;
    width: $box-side;

    .back & { width: $box-side / 2; }

  }

  &.right {
    right: 0;
    transform: rotateY(-90deg);
    transform-origin: 100% 50%;
    width: $box-side;

    .back & { width: $box-side / 2; }

  }
}



// .sideActive, .sideSelected { background-color: rgba(255, 150, 0, .6); }
